apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: kube-system
  labels:
    application: external-dns
    version: v0.5.18
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      application: external-dns
  template:
    metadata:
      labels:
        application: external-dns
        version: v0.5.18
{{ if eq .ConfigItems.kube_aws_iam_controller_kube_system_enable "false"}}
      annotations:
        iam.amazonaws.com/role: "{{ .LocalID }}-app-external-dns"
{{ end }}
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      priorityClassName: system-cluster-critical
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: registry.opensource.zalan.do/teapot/external-dns:v0.5.18
        args:
        - --source=service
        - --source=ingress
        - --provider=aws
        - --registry=txt
        - --txt-owner-id={{ .Region }}:{{ .LocalID }}
        - --txt-prefix={{ .ConfigItems.external_dns_ownership_prefix }}
        - --aws-batch-change-size=100
{{ if eq .ConfigItems.kube_aws_iam_controller_kube_system_enable "true"}}
        env:
        # must be set for the AWS SDK/AWS CLI to find the credentials file.
        - name: AWS_SHARED_CREDENTIALS_FILE # used by golang SDK
          value: /meta/aws-iam/credentials.process
{{ end }}
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 7979
        volumeMounts:
        - name: kube-api-access
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
{{ if eq .ConfigItems.kube_aws_iam_controller_kube_system_enable "true"}}
        - name: aws-iam-credentials
          mountPath: /meta/aws-iam
          readOnly: true
{{ end }}
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop: ["ALL"]
      securityContext:
        fsGroup: 65534
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3600
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
{{ if eq .ConfigItems.kube_aws_iam_controller_kube_system_enable "true"}}
      - name: aws-iam-credentials
        secret:
          secretName: external-dns-aws-iam-credentials
{{ end }}
